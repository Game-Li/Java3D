package lab5;
import java.applet.Applet;
import java.awt.*;
import com.sun.j3d.utils.applet.MainFrame;
import com.sun.j3d.utils.geometry.*;
import com.sun.j3d.utils.universe.*;
import javax.media.j3d.*;
import javax.vecmath.*;
import com.sun.j3d.utils.behaviors.mouse.*;
public class AxisAngle4fc extends Applet
{public static void main(String[] args)
{new MainFrame(new AxisAngle4fc(),500,500);}
    public AxisAngle4fc()
    {setLayout(new BorderLayout());
        Panel p = new Panel();
        p.add(new Label("20151681310036 冯懿"));
        add(p, BorderLayout.NORTH);
        GraphicsConfiguration gc = SimpleUniverse.getPreferredConfiguration();
        Canvas3D c=new Canvas3D(gc);
        add("Center",c);
        BranchGroup BranchGroupScene=createBranchGroupSceneGraph();
        SimpleUniverse u=new SimpleUniverse(c);
        u.getViewingPlatform().setNominalViewingTransform();
        u.addBranchGraph(BranchGroupScene);
    }
    public BranchGroup createBranchGroupSceneGraph()
    {BranchGroup BrachGroupRoot =new BranchGroup();
        BoundingSphere bounds=new BoundingSphere(new Point3d(0.0,0.0,0.0),100.0);
        Color3f bgColor=new Color3f(1.0f,1.0f,1.0f);
        Background bg=new Background(bgColor);
        bg.setApplicationBounds(bounds);
        BrachGroupRoot.addChild(bg);
        Color3f directionalColor=new Color3f(1.f,1.f,1.f);
        Vector3f vec=new Vector3f(-1.f,-1.f,-1.0f);
        DirectionalLight directionalLight=new DirectionalLight(directionalColor,vec);
        directionalLight.setInfluencingBounds(bounds);
        BrachGroupRoot.addChild(directionalLight);
        Appearance app1=new Appearance();
        Material material1=new Material();
        material1.setDiffuseColor(new Color3f(1.0f,.0f,0.0f));
        app1.setMaterial(material1);
        Appearance app2=new Appearance();
        Material material2=new Material();
        material2.setDiffuseColor(new Color3f(.0f,1.0f,0.0f));
        app2.setMaterial(material2);
        Appearance app3=new Appearance();
        Material material3=new Material();
        material3.setDiffuseColor(new Color3f(.0f,.0f,1.0f));
        app3.setMaterial(material3);
        Appearance app4=new Appearance();
        Material material4=new Material();
        material4.setDiffuseColor(new Color3f(1.0f,1.0f,0.0f));
        app4.setMaterial(material4);
        Appearance app5=new Appearance();
        Material material5=new Material();
        material5.setDiffuseColor(new Color3f(.0f,1.0f,1.0f));
        app5.setMaterial(material5);
        Appearance app6=new Appearance();
        Material material6=new Material();
        material6.setDiffuseColor(new Color3f(1.0f,.0f,1.0f));
        app6.setMaterial(material6);
        Transform3D t=new Transform3D();
        t.setTranslation(new Vector3f(0.f,0.3f,0.f));
        TransformGroup transformgroup=new TransformGroup(t);
        transformgroup.setCapability(TransformGroup.ALLOW_TRANSFORM_WRITE);
        transformgroup.setCapability(TransformGroup.ALLOW_TRANSFORM_READ);
        BrachGroupRoot.addChild(transformgroup);
        MouseRotate mouserotate = new MouseRotate();
        mouserotate.setTransformGroup(transformgroup);
        BrachGroupRoot.addChild(mouserotate);
        mouserotate.setSchedulingBounds(bounds);
        MouseZoom mousezoom = new MouseZoom();
        mousezoom.setTransformGroup(transformgroup);
        BrachGroupRoot.addChild(mousezoom);
        mousezoom.setSchedulingBounds(bounds);
        MouseTranslate mousetranslate = new MouseTranslate();
        mousetranslate.setTransformGroup(transformgroup);
        BrachGroupRoot.addChild(mousetranslate);
        mousetranslate.setSchedulingBounds(bounds);
//定义基本体及外观属性与坐标变换
        t=new Transform3D();
        t.setTranslation(new Vector3f(0.f,-1.31f,0.f));
        TransformGroup tg1=new TransformGroup(t);
        tg1.addChild(new Box(0.65f,0.01f,0.65f,app2));
        t=new Transform3D();
        t.setTranslation(new Vector3f(0.f,-0.8f,0.f));
        TransformGroup tg2=new TransformGroup(t);
        tg2.addChild(new Sphere(0.5f,1,100,app1));
        t=new Transform3D();
        t.setTranslation(new Vector3f(0.f,0.f,0.f));
        TransformGroup tg3=new TransformGroup(t);
        tg3.addChild(new Sphere(0.4f,1,100,app3));
        t=new Transform3D();
        t.setTranslation(new Vector3f(0.f,0.5f,0.f));
        TransformGroup tg4=new TransformGroup(t);
        tg4.addChild(new Sphere(0.2f,1,100,app4));
        TransformGroup tg5=new TransformGroup();
        tg5.addChild(new Cylinder(0.05f,1.8f,app2));
        t=new Transform3D();
        t.rotZ(Math.PI/2);
        t.setTranslation(new Vector3f(-0.1f,.9f,0.f));
        TransformGroup tg6=new TransformGroup(t);
        tg6.addChild(new Cone(0.05f,0.9f,1,200,200,app1));
        t=new Transform3D();
        t.rotX(Math.PI/2);
        t.setTranslation(new Vector3f(0.f,-0.8f,0.f));
        TransformGroup tg7=new TransformGroup(t);
        tg7.addChild(new Cylinder(0.05f,1.8f,app2));
        t=new Transform3D();
        t.rotZ(Math.PI/4);
        t.setTranslation(new Vector3f(0.f,0.f,0.f));
        TransformGroup tg8=new TransformGroup(t);
        tg8.addChild(new Cylinder(0.05f,1.8f,app2));
        t=new Transform3D();
//让圆柱体绕向量（1,1,1）逆时针旋转45度
        Vector3f vector3f=new Vector3f(1.f,1.f,1.f);
        vector3f.normalize();
        float theta=(float)Math.PI/4f;
        Quat4f quat=new Quat4f();
        quat.x=(float)Math.sin(theta/2f)*vector3f.x;
        quat.y=(float)Math.sin(theta/2f)*vector3f.y;
        quat.x=(float)Math.sin(theta/2f)*vector3f.z;
        quat.w=(float)Math.cos(theta/2f);
        t.setRotation(quat);
        t.setTranslation(new Vector3f(-0.5f,-.1f,0.f));
        TransformGroup tg9=new TransformGroup(t);
        tg9.addChild(new Cylinder(0.05f,0.8f,app1));
        t=new Transform3D();
        t.rotX(Math.PI/4);
        t.rotY(Math.PI/4);
        t.setTranslation(new Vector3f(-0.7f,0.6f,0.f));
        TransformGroup tg10=new TransformGroup(t);
        tg10.addChild(new ColorCube(0.2));
        TransformGroup transformgroup0=new TransformGroup();
        transformgroup0.addChild(tg1);
        transformgroup0.addChild(tg2);
        transformgroup0.addChild(tg3);
        transformgroup0.addChild(tg4);
        transformgroup0.addChild(tg5);
        transformgroup0.addChild(tg6);
        transformgroup0.addChild(tg7);
        transformgroup0.addChild(tg8);
        transformgroup0.addChild(tg9);
        transformgroup0.addChild(tg10);
//建立SharedGroup对象
        SharedGroup sharedgroup=new SharedGroup();
        sharedgroup.addChild(transformgroup0);
//5次复制及其各旋转，并绕一个圆周分布
        int i,j,k;
        float theta1,R=0.6f;
        theta1=2.0f*(float)Math.PI/5;
        for(i=0;i<5;i++)
        {Transform3D t1=new Transform3D();
            //也可用下列旋转语句
            //t1.set(new AxisAngle4d(0.3,0.5,0.1,Math.PI*1.7*i));
            t1.setRotation(new AxisAngle4d(0.3,0.5,0.1,Math.PI*1.7*i));
            t1.setScale(0.3f);
            t1.setTranslation(new Vector3f(R*(float)Math.sin(i*theta1),
                    R*(float)Math.cos(i*theta1)-0.3f,0));
            TransformGroup sg1=new TransformGroup(t1);
            sg1.addChild(new Link(sharedgroup));
            transformgroup.addChild(sg1);
        }
        BrachGroupRoot.compile();
        return BrachGroupRoot;}}
